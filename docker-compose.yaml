version: '3.7'
services:
  app:
    container_name: app
    build: .
    restart: always
    ports:
      - "8000:8000"
#    command: bash -c "uvicorn app.web:app --host 0.0.0.0 --port 8000 --workers 4"
    command: bash -c "uvicorn app.web:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app

  consumer:
    container_name: consumer
    depends_on:
        - kafka
        - mongo
    build: .
    restart: always
    command: bash -c "python app/consumer.py"
    volumes:
      - .:/app

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "mailing:1:1"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

  mongo:
    restart: always
    image: mongo:4.4
    container_name: mongo
    env_file: .env
    volumes:
        - .data:/data/db
    ports:
        - "${MONGODB_PORT}:${MONGODB_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    command: '--bind_ip_all --port ${MONGODB_PORT}'
